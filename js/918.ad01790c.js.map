{"version":3,"file":"js/918.ad01790c.js","mappings":"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","sources":["webpack://aiArt/./src/views/RegisterView.vue","webpack://aiArt/./src/utils/validationRules.js","webpack://aiArt/src/views/RegisterView.vue","webpack://aiArt/./src/views/RegisterView.vue?1e62","webpack://aiArt/./src/views/RegisterView.vue?4f51"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"register-container\",style:({ backgroundImage: `url(${_vm.backgroundImage})` })},[_c('el-card',{staticClass:\"register-card\"},[_c('h2',{staticClass:\"register-title\"},[_vm._v(\"AI Art Generator\")]),_c('el-form',{ref:\"registerForm\",attrs:{\"model\":_vm.registerForm,\"rules\":_vm.registerRules}},[_c('el-form-item',{attrs:{\"prop\":\"phone\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入手机号\"},model:{value:(_vm.registerForm.phone),callback:function ($$v) {_vm.$set(_vm.registerForm, \"phone\", $$v)},expression:\"registerForm.phone\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"code\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入验证码\"},scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.isCodeSending},on:{\"click\":_vm.sendCode}},[_vm._v(\" \"+_vm._s(_vm.codeButtonText)+\" \")])]},proxy:true}]),model:{value:(_vm.registerForm.code),callback:function ($$v) {_vm.$set(_vm.registerForm, \"code\", $$v)},expression:\"registerForm.code\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"password\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入密码\",\"show-password\":\"\"},model:{value:(_vm.registerForm.password),callback:function ($$v) {_vm.$set(_vm.registerForm, \"password\", $$v)},expression:\"registerForm.password\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"confirmPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请确认密码\",\"show-password\":\"\"},on:{\"blur\":_vm.validateConfirmPasswordOnBlur},model:{value:(_vm.registerForm.confirmPassword),callback:function ($$v) {_vm.$set(_vm.registerForm, \"confirmPassword\", $$v)},expression:\"registerForm.confirmPassword\"}})],1),_c('el-button',{staticClass:\"register-button\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm('registerForm')}}},[_vm._v(\"注册\")]),_c('p',{staticClass:\"login-link\"},[_vm._v(\" 已有账号？\"),_c('router-link',{attrs:{\"to\":\"/login\"}},[_vm._v(\"立即登录\")])],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// src/utils/validationRules.js\r\n\r\n// 手机号验证规则\r\nexport const phoneRules = [\r\n    { required: true, message: '请输入手机号', trigger: 'blur' },\r\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入合法的手机号', trigger: 'blur' }\r\n];\r\n\r\n// 密码验证规则\r\nexport const passwordRules = [\r\n    { required: true, message: '请输入密码', trigger: 'blur' },\r\n    { validator: validatePassword, trigger: 'blur' }\r\n];\r\n\r\n// 验证码验证规则\r\nexport const codeRules = [\r\n    { required: true, message: '请输入验证码', trigger: 'blur' }\r\n];\r\n\r\n// 密码验证逻辑\r\nexport function validatePassword(rule, value, callback) {\r\n    if (value.length < 8 || value.length > 16) {\r\n        callback(new Error('密码长度必须在8到16位之间'));\r\n    } else {\r\n        // 检查密码是否包含至少两种类型的字符\r\n        const checks = [\r\n            /[a-z]/.test(value), // 小写字母\r\n            /[A-Z]/.test(value), // 大写字母\r\n            /\\d/.test(value),   // 数字\r\n            /[^a-zA-Z0-9]/.test(value) // 特殊字符\r\n        ];\r\n        const valid = checks.filter(Boolean).length >= 2; // 至少满足两种\r\n        if (!valid) {\r\n            callback(new Error('密码至少包含小写字母、大写字母、数字、特殊字符中的任意两种'));\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n}\r\n\r\n// 确认密码验证逻辑\r\nexport function validateConfirmPassword(rule, value, callback, form) {\r\n    if (value !== form.password) {\r\n        callback(new Error('两次输入的密码不一致！'));\r\n    } else {\r\n        callback();\r\n    }\r\n}","<template>\r\n    <div class=\"register-container\" :style=\"{ backgroundImage: `url(${backgroundImage})` }\">\r\n        <el-card class=\"register-card\">\r\n            <h2 class=\"register-title\">AI Art Generator</h2>\r\n            <el-form :model=\"registerForm\" :rules=\"registerRules\" ref=\"registerForm\">\r\n                <el-form-item prop=\"phone\">\r\n                    <el-input v-model=\"registerForm.phone\" placeholder=\"请输入手机号\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"code\">\r\n                    <el-input v-model=\"registerForm.code\" placeholder=\"请输入验证码\">\r\n                        <template #append>\r\n                            <el-button type=\"primary\" :disabled=\"isCodeSending\" @click=\"sendCode\">\r\n                                {{ codeButtonText }}\r\n                            </el-button>\r\n                        </template>\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input type=\"password\" v-model=\"registerForm.password\" placeholder=\"请输入密码\"\r\n                        show-password></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"confirmPassword\">\r\n                    <el-input type=\"password\" v-model=\"registerForm.confirmPassword\" placeholder=\"请确认密码\" show-password\r\n                        @blur=\"validateConfirmPasswordOnBlur\"></el-input>\r\n                </el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('registerForm')\" class=\"register-button\">注册</el-button>\r\n                <p class=\"login-link\">\r\n                    已有账号？<router-link to=\"/login\">立即登录</router-link>\r\n                </p>\r\n            </el-form>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { phoneRules, passwordRules, codeRules, validateConfirmPassword } from '@/utils/validationRules';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            backgroundImage: require('@/assets/ai-art-background.png'),\r\n            registerForm: {\r\n                phone: '',\r\n                code: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            },\r\n            isCodeSending: false,\r\n            codeButtonText: '获取验证码',\r\n            registerRules: {\r\n                phone: phoneRules,\r\n                code: codeRules,\r\n                password: passwordRules,\r\n                confirmPassword: [\r\n                    { required: true, message: '请确认密码', trigger: 'blur' },\r\n                    { validator: (rule, value, callback) => validateConfirmPassword(rule, value, callback, this.registerForm) }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        // 提交注册表单\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.$message({\r\n                        message: '注册成功',\r\n                        type: 'success'\r\n                    });\r\n                    this.$router.push('/login');\r\n                } else {\r\n                    this.$message({\r\n                        message: '表单验证失败',\r\n                        type: 'error'\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        // 发送验证码\r\n        sendCode() {\r\n            this.isCodeSending = true;\r\n            this.codeButtonText = '发送中...';\r\n            setTimeout(() => {\r\n                this.isCodeSending = false;\r\n            }, 3000);\r\n        },\r\n        // 在 blur 事件中手动触发确认密码验证\r\n        validateConfirmPasswordOnBlur() {\r\n            this.$refs.registerForm.validateField('confirmPassword', (errorMessage) => {\r\n                if (errorMessage) {\r\n                    this.$message({\r\n                        message: errorMessage,\r\n                        type: 'error'\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n.register-card {\r\n    width: 400px;\r\n    padding: 20px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n    border-radius: 10px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.register-title {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n    font-size: 24px;\r\n    color: #333;\r\n}\r\n\r\n.register-button {\r\n    width: 100%;\r\n    margin-top: 20px;\r\n}\r\n\r\n.login-link {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.login-link a {\r\n    color: #409EFF;\r\n    text-decoration: none;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RegisterView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RegisterView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./RegisterView.vue?vue&type=template&id=6df9e050&scoped=true\"\nimport script from \"./RegisterView.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterView.vue?vue&type=script&lang=js\"\nimport style0 from \"./RegisterView.vue?vue&type=style&index=0&id=6df9e050&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6df9e050\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","style","backgroundImage","_v","ref","attrs","registerForm","registerRules","model","value","phone","callback","$$v","$set","expression","scopedSlots","_u","key","fn","isCodeSending","on","sendCode","_s","codeButtonText","proxy","code","password","validateConfirmPasswordOnBlur","confirmPassword","$event","submitForm","staticRenderFns","phoneRules","required","message","trigger","pattern","passwordRules","validator","validatePassword","codeRules","rule","length","Error","checks","test","valid","filter","Boolean","validateConfirmPassword","form","data","require","methods","formName","$refs","validate","$message","type","$router","push","setTimeout","validateField","errorMessage","component"],"sourceRoot":""}